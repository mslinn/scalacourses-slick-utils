Index.PACKAGES = {"com" : [], "com.micronautics" : [], "com.micronautics.slickUtils" : [{"name" : "com.micronautics.slickUtils.TypeMappers", "members_trait" : [{"label" : "mapStringLongWrites", "tail" : ": Writes[Map[String, Long]] { def writes(mapStringLong: Map[String,Long]): play.api.libs.json.JsArray }", "member" : "com.micronautics.slickUtils.TypeMappers.mapStringLongWrites", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#mapStringLongWrites:play.api.libs.json.Writes[Map[String,Long]]{defwrites(mapStringLong:Map[String,Long]):play.api.libs.json.JsArray}", "kind" : "implicit val"}, {"label" : "mapStringIntWrites", "tail" : ": Writes[Map[String, Int]] { def writes(mapStringInt: Map[String,Int]): play.api.libs.json.JsArray }", "member" : "com.micronautics.slickUtils.TypeMappers.mapStringIntWrites", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#mapStringIntWrites:play.api.libs.json.Writes[Map[String,Int]]{defwrites(mapStringInt:Map[String,Int]):play.api.libs.json.JsArray}", "kind" : "implicit val"}, {"label" : "mapLongListIntReads", "tail" : ": Reads[Map[Long, List[Int]]]", "member" : "com.micronautics.slickUtils.TypeMappers.mapLongListIntReads", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#mapLongListIntReads:play.api.libs.json.Reads[Map[Long,List[Int]]]", "kind" : "implicit val"}, {"label" : "mapLongIntReads", "tail" : ": Reads[Map[Long, Int]]", "member" : "com.micronautics.slickUtils.TypeMappers.mapLongIntReads", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#mapLongIntReads:play.api.libs.json.Reads[Map[Long,Int]]", "kind" : "implicit val"}, {"label" : "tuple2Writes", "tail" : "(aWrites: Writes[A], bWrites: Writes[B]): Writes[(A, B)]", "member" : "com.micronautics.slickUtils.TypeMappers.tuple2Writes", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#tuple2Writes[A,B](implicitaWrites:play.api.libs.json.Writes[A],implicitbWrites:play.api.libs.json.Writes[B]):play.api.libs.json.Writes[(A,B)]", "kind" : "implicit def"}, {"label" : "tuple2Reads", "tail" : "(aReads: Reads[A], bReads: Reads[B]): Reads[(A, B)]", "member" : "com.micronautics.slickUtils.TypeMappers.tuple2Reads", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#tuple2Reads[A,B](implicitaReads:play.api.libs.json.Reads[A],implicitbReads:play.api.libs.json.Reads[B]):play.api.libs.json.Reads[(A,B)]", "kind" : "implicit def"}, {"label" : "listStringMapper", "tail" : "(): slick.jdbc.PostgresProfile.BaseColumnType[List[String]]", "member" : "com.micronautics.slickUtils.TypeMappers.listStringMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#listStringMapper:slick.jdbc.PostgresProfile.BaseColumnType[List[String]]", "kind" : "implicit def"}, {"label" : "vectorLongMapper", "tail" : "(): slick.jdbc.PostgresProfile.BaseColumnType[Vector[Long]]", "member" : "com.micronautics.slickUtils.TypeMappers.vectorLongMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#vectorLongMapper:slick.jdbc.PostgresProfile.BaseColumnType[Vector[Long]]", "kind" : "implicit def"}, {"label" : "uuidMapper", "tail" : ": slick.jdbc.PostgresProfile.BaseColumnType[UUID]", "member" : "com.micronautics.slickUtils.TypeMappers.uuidMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#uuidMapper:slick.jdbc.PostgresProfile.BaseColumnType[java.util.UUID]", "kind" : "implicit val"}, {"label" : "listLongMapper", "tail" : "(): slick.jdbc.PostgresProfile.BaseColumnType[List[Long]]", "member" : "com.micronautics.slickUtils.TypeMappers.listLongMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#listLongMapper:slick.jdbc.PostgresProfile.BaseColumnType[List[Long]]", "kind" : "implicit def"}, {"label" : "mapLongListIntMapper", "tail" : "(): slick.jdbc.PostgresProfile.BaseColumnType[Map[Long, List[Int]]]", "member" : "com.micronautics.slickUtils.TypeMappers.mapLongListIntMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#mapLongListIntMapper:slick.jdbc.PostgresProfile.BaseColumnType[scala.collection.immutable.Map[Long,List[Int]]]", "kind" : "implicit def"}, {"label" : "mapStringIntMapper", "tail" : "(): slick.jdbc.PostgresProfile.BaseColumnType[Map[String, Int]]", "member" : "com.micronautics.slickUtils.TypeMappers.mapStringIntMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#mapStringIntMapper:slick.jdbc.PostgresProfile.BaseColumnType[scala.collection.immutable.Map[String,Int]]", "kind" : "implicit def"}, {"label" : "listIntMapper", "tail" : "(): slick.jdbc.PostgresProfile.BaseColumnType[List[Int]]", "member" : "com.micronautics.slickUtils.TypeMappers.listIntMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#listIntMapper:slick.jdbc.PostgresProfile.BaseColumnType[List[Int]]", "kind" : "implicit def"}, {"label" : "listDoubleMapper", "tail" : "(): slick.jdbc.PostgresProfile.BaseColumnType[List[Double]]", "member" : "com.micronautics.slickUtils.TypeMappers.listDoubleMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#listDoubleMapper:slick.jdbc.PostgresProfile.BaseColumnType[List[Double]]", "kind" : "implicit def"}, {"label" : "ipAddressMapper", "tail" : ": slick.jdbc.PostgresProfile.BaseColumnType[IPAddress]", "member" : "com.micronautics.slickUtils.TypeMappers.ipAddressMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#ipAddressMapper:slick.jdbc.PostgresProfile.BaseColumnType[grizzled.net.IPAddress]", "kind" : "implicit val"}, {"label" : "dateTimeMapper", "tail" : ": slick.jdbc.PostgresProfile.BaseColumnType[DateTime]", "member" : "com.micronautics.slickUtils.TypeMappers.dateTimeMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#dateTimeMapper:slick.jdbc.PostgresProfile.BaseColumnType[org.joda.time.DateTime]", "kind" : "implicit val"}, {"label" : "urlMapper", "tail" : ": slick.jdbc.PostgresProfile.BaseColumnType[URL]", "member" : "com.micronautics.slickUtils.TypeMappers.urlMapper", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#urlMapper:slick.jdbc.PostgresProfile.BaseColumnType[java.net.URL]", "kind" : "implicit val"}, {"label" : "Logger", "tail" : ": Logger", "member" : "com.micronautics.slickUtils.TypeMappers.Logger", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#Logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/micronautics\/slickUtils\/TypeMappers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "TODO remove dependency on the Postgres driver implementation", "trait" : "com\/micronautics\/slickUtils\/TypeMappers.html", "kind" : "trait"}]};